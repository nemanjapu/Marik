@model Marik.Areas.Admin.ViewModels.AddProductViewModel
@{
    ViewBag.Title = "New product";
}

<div class="container-fluid">
    <h2>New product</h2>

    @Html.ValidationSummary()

    @using (Html.BeginForm("SaveNewProduct", "ProductManager", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="row">
            <div class="col-sm-4">
                <div class="form-group">
                    @Html.LabelFor(m => m.Name)
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Name)
                </div>
            </div>
            <div class="col-sm-4">
                <div class="form-group">
                    @Html.LabelFor(m => m.Subtitle)
                    @Html.TextBoxFor(m => m.Subtitle, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Subtitle)
                </div>
            </div>
            <div class="col-sm-4">
                <div class="form-group">
                    <label>Price:</label>
                    @Html.TextBoxFor(m => m.Price, new { @class = "form-control", type = "number" })
                    @Html.ValidationMessageFor(m => m.Price)
                </div>
            </div>
            <div class="col-sm-4">
                <div class="form-group">
                    <div class="inputGroup">
                        @Html.CheckBoxFor(m => m.isActive)
                        <label for="isActive">Show on website</label>
                    </div>
                </div>
            </div>
            <div class="col-sm-4">
                <div class="form-group">
                    <label>Product file:</label>
                    <input class="form-control required" type="file" name="document" id="document" accept="application/pdf" required />
                </div>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    <label>Meta keywords:</label>
                    @Html.TextBoxFor(m => m.MetaKeywords, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.MetaKeywords)
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    <label>Meta description:</label>
                    @Html.TextBoxFor(m => m.MetaDescription, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.MetaDescription)
                </div>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-12">
                <div class="form-group">
                    <label>Images:</label>
                    <input style="padding: 3px;" class="form-control required" type="file" name="file" multiple="multiple" accept="image/*" id="images" required>
                </div>
                <div class="container-fluid">
                    <div class="row" id="imgs-con">

                    </div>
                </div>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-12">
                <div class="form-group">
                    <label>Text:</label>
                    @Html.TextAreaFor(m => m.Text, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Text)
                </div>
            </div>
        </div>

        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-block btn-success btn-save-listing"><i class="fa fa-check" aria-hidden="true"></i></button>
    }
</div>

@Html.Partial("_LargeFileModal")

@section scripts{
    <script>
        $("#images").validate({
            required: true,
            ignore: ":hidden:not(#summernote),.note-editable.panel-body"
        });
        $("#document").validate({
            required: true,
            ignore: ":hidden:not(#summernote),.note-editable.panel-body"
        });
    </script>

    <script>
        $('#Text').summernote({
            height: 350,
            toolbar: [
                ['style', ['bold', 'italic', 'underline', 'clear']],
                ['fontsize', ['fontsize']],
                ['color', ['color']],
                ['para', ['ul', 'ol', 'paragraph']],
                ['height', ['height']],
                ['undo', ['undo']],
                ['redo', ['redo']]
            ]
        });
    </script>
    <script>
        $(document).ready(function () {
            var uploadField = document.getElementById("images");

            uploadField.onchange = function () {
                if (this.files[0].size > 20000000) {
                    $('#LargeFileModal').modal('show')
                    this.value = "";
                };
            };

            var uploadField2 = document.getElementById("document");

            document.getElementById("document").onchange = function () {
                if (this.files[0].size > 20000000) {
                    $('#LargeFileModal').modal('show')
                    this.value = "";
                };
            };
        });
        $("#images").on('change', function () {
            var fileList = this.files;
            for (var i = 0; i < fileList.length; i++) {
                var t = window.URL || window.webkitURL;
                var objectUrl = t.createObjectURL(fileList[i]);
                $('#imgs-con').append('<div class="col-sm-2"><div class="card mb-4"><img class="card-img-top card-img-bottom" src="' + objectUrl + '" /></div></div>');
            }
        });
    </script>
}